---
title: '\singlespace Supplemental Material for _Allies as Armaments Explaining the Specialization of State Military Capabilities_'
author:
  - name: Anonymized
format:
  pdf:
    fig-format: png
    toc: false
    number-sections: true
    fig-pos: H
editor: visual
execute:
  echo: false
  warning: false
  cache: true
date: today
date-format: long
header-includes:
- \usepackage{tikz}
- \usepackage{pgfplots}
- \pgfplotsset{compat=newest}
- \usetikzlibrary{plotmarks}
- \usetikzlibrary{arrows.meta}
- \usepgfplotslibrary{patchplots}
- \usepackage{grffile}
- \usepackage{caption}
- \usepackage[utf8]{inputenc}
- \usepackage[doublespacing]{setspace}
- \AtBeginEnvironment{tabular}{\singlespacing}
- \usepackage{float}
- \usepackage{multirow}
- \usepackage{tablefootnote}
- \usepackage{pifont}
- \usepackage{newunicodechar}
- \usepackage{booktabs}
- \usepackage{siunitx}
- \usepackage{tabularx}
- \newunicodechar{âœ“}{\ding{51}}
- \newcommand{\beginsupplement}{
    \setcounter{table}{0}  
    \renewcommand{\thetable}{A\arabic{table}} 
    \setcounter{figure}{0} 
    \renewcommand{\thefigure}{A\arabic{figure}}}
bibliography: ForceStructure.bib
---

```{r knitr-options, cache = FALSE}
library(knitr)
library(kableExtra)
library(magrittr)
library(ggplot2)
library(ggtext)
```

```{r load data}
df_raw <- readRDS(paste0(here::here(), '/data/rDMC_raw_v1.rds'))

df_long <- readRDS(paste0(here::here(), '/data/rDMC_long_v1.rds')) %>%
  dplyr::filter(year <= 2014)

df_wide <- readRDS(paste0(here::here(), '/data/rDMC_wide_v1.rds')) %>%
  dplyr::filter(year <= 2014)

df_full <- readRDS(paste0(here::here(), '/data/03_DF-full.rds'))
```

```{=tex}
\beginsupplement
```
\singlespacing

This appendix accompanies the paper "Allies as Armaments: Explaining the Specialization of State Military Capabilities". It provides supplemental information concerning descriptive statistics of the data used in the model and robustness checks and alternate specifications as described in the results section of the manuscript.

\tableofcontents

\doublespacing

\newpage

# Descriptive statistics

```{r summstats}
#| label: tbl-summstats
#| tbl-cap: "Summary statistics for model variables. Year polynomials are omitted for simplicity."
#| fig.position: 'H!'

df_full %>%
  dplyr::select('Year' = year,
                'Specialization' = spec_fentrop,
                'Allies\' Mil Spend. (log)' = milex_allies,
                'Allies\' CINC Ratio' = cinc_allies_ratio,
                'Democracy' = democracy,
                'Interstate War (5yr lag)' = interstatewar_5yrlag_binary,
                'GDP (log)' = lngdp_WDI_full,
                'CINC' = cinc_MC) %>%
  modelsummary::datasummary_skim(Title = "Summary statistics of model variables",
                                 histogram = FALSE,
                                 fmt = 2,
                                 output = 'markdown') %>%
  kableExtra::kable_styling(latex_options = "scale_down")
```

\newpage

# Alternate Model Specifications

We run a set of alternate model specifications as robustness checks.[^1] Our results are consistent across alternate modeling specifications including different regression models and control variables. We choose the OLS model specification for the primary results shown in the manuscript given it is the most easily interpretable and consistent with existing research. Explanations for additional model specifications as well as their results are shown below. These alternate model specifications have been chosen based on existing research using similar dependent variables in both ecology and political science [@chiu_incidencedatabasedspeciesrichness_2022; @kubinec_orderedbetaregression_2022].

[^1]: Much of the modeling done here follows the protocol described by @heiss_guidemodelingproportions_2021. The author is thankful for their open-source code and strongly suggests readers refer to the original material from which much of this code originates.

The dependent variable, military specialization, is an entropy-based measures of deviations from a country's count of each military capability from a baseline determined by the composition of their military as well as that of other countries. It is bounded between [0, 1) with 0 representing no specialization (a state's composite military perfectly matches prior expectations) and 1 representing the theoretical entropic maximum. In the observed data (n = `r scales::comma(nrow(df_full))`), there are `r df_full %>% dplyr::filter(spec_fentrop == 0) %>% nrow` rows where the dependent variable is 0 and none where the dependent variable is 1.

\newpage

## OLS

```{r}
#| label: tbl-results-ols
#| tbl-cap: "OLS regression results"
#| fig.position: 'H!'

# EV 1
## Select vars
df_m1 <- df_full %>%
  dplyr::select(spec_fentrop,
                milex_allies,
                democracy,
                interstatewar_5yrlag_binary,
                lngdp_WDI_full,
                cinc_MC,
                year_base,
                year_sq,
                year_cube)

## Bivariate
m1_bi <- lm(spec_fentrop ~ milex_allies,
         data = df_m1)
m1_bicse <- lmtest::coeftest(m1_bi, 
                              vcov = sandwich::vcovCL(m1_bi,
                                                      factor(df_full$country)))

## Multivariate
m1_spline <- lm(spec_fentrop ~ .,
                data = df_m1)
m1_splinecse <- lmtest::coeftest(m1_spline,
                                 vcov = sandwich::vcovCL(m1_spline, factor(df_full$country)))

# EV 2
## Select vars
df_m2 <- df_full %>%
  dplyr::select(spec_fentrop,
                cinc_allies_ratio,
                democracy,
                interstatewar_5yrlag_binary,
                lngdp_WDI_full,
                cinc_MC,
                year_base,
                year_sq,
                year_cube)

## Bivariate
m2_bi <- lm(spec_fentrop ~ cinc_allies_ratio,
            data = df_m2)
m2_bicse <- lmtest::coeftest(m2_bi, 
                              vcov = sandwich::vcovCL(m2_bi,
                                                      factor(df_full$country)))

## Multivariate
m2_spline <- lm(spec_fentrop ~ .,
                data = df_m2)
m2_splinecse <- lmtest::coeftest(m2_spline,
                                 vcov = sandwich::vcovCL(m2_spline, factor(df_full$country)))

# Table
## https://posit.co/blog/new-features-upgrades-in-gt-0-8-0/
models <- list(m1_bicse, m1_splinecse,
               m2_bicse, m2_splinecse)

coefs <- c("milex_allies" = "Allies' Mil Spend. (log)",
           "cinc_allies_ratio" = "Allies' CINC Ratio",
           "democracy1" = "Democracy",
           "interstatewar_5yrlag_binary1" = "Interstate War (5yr lag)",
           "lngdp_WDI_full" = "GDP (log)",
           "cinc_MC" = "CINC",
           "coastline" = "Coastline (log)",
           "land_boundary_length_log" = "Land border (log)",
           "year_base" = "Year",
           "year_sq" = "Year$^2$",
           "year_cube" = "Year$^3$")

modelsummary::modelsummary(models,
                           statistic = 'p.value',
                           stars = TRUE,
                           coef_map = coefs,
                           escape = FALSE) %>%
  kableExtra::add_footnote(label = "All models include country-clustered standard errors.")
```

\newpage

## Fractional logit and beta regression

The first set of models provide a robustness check by relaxing the OLS assumption about continuous linearity in the dependent variable. Since the dependent variable is continuous, but bounded between [0, 1) we can use a quasi-binomial fractional logistic regression [@papke_econometricmethodsfractional_1996]. The coefficients cannot be compared to the original model because they are provided on a log odds scale and can instead be interpreted as percentage change in the dependent variable predicted by a one unit increase in the independent variable value. We can also use a beta regression treating the dependent variable as a proportion bounded between (0, 1) non-inclusive [@grun_extendedbetaregression_2012]. Since the actual dependent variable does include values of 0, we transform it using the modification suggested by @smithson_betterlemonsqueezer_2006. I do not report these as the primary results supporting the theory because of concerns about bias introduced by fractional logit's lack of a normalizing constant [@loaiza-ganem_continuousbernoullifixing_2019, @kubinec_stopusingfractional_2023]. Similar to the fractional logit models, coefficients for the beta regression are on a logit scale. The results from these models (with and without robust standard errors for the fractional logit) are provided in @tbl-results-fracbeta and are consistent with the original results provided in the manuscript.[^2] Both independent variables retain statistical significance in the expected direction and of comparable magnitudes.

[^2]: As the beta regression is a distributional, rather than mean-focused regression, it provides a precision parameter that is omitted here [@kneib_ragemeanreview_2021].

```{r results-fracbeta}
#| label: tbl-results-fracbeta
#| tbl-cap: "Fractional logit and beta regression results"
#| fig.position: 'H!'

# Frac logit
## EV1
m1_flogit <- glm(spec_fentrop ~
                   milex_allies +
                   democracy +
                   interstatewar_5yrlag_binary +
                   lngdp_WDI_full +
                   cinc_MC +
                   year_base +
                   year_sq +
                   year_cube,
                 data = df_full, 
                 family = quasibinomial())

### Add robust SE
m1_flogit_cse <- lmtest::coeftest(m1_flogit, vcov = sandwich::vcovHC, type = "HC1")

## EV2
m2_flogit <- glm(spec_fentrop ~ 
                   cinc_allies_ratio +
                   democracy +
                   interstatewar_5yrlag_binary +
                   lngdp_WDI_full +
                   cinc_MC +
                   year_base +
                   year_sq +
                   year_cube,
                 data = df_full, 
                 family = quasibinomial())

### Add robust SE
m2_flogit_cse <- lmtest::coeftest(m2_flogit, vcov = sandwich::vcovHC, type = "HC1")

# Formula to convert 0's for a beta
svTransform <- function(y)
{
    n <- length(y)
    transformed <- (y * (n - 1) + 0.5)/n
    return(transformed)
}

## Transform DV
df_full <- df_full %>%
  dplyr::mutate(spec_fentrop_fix = svTransform(df_full$spec_fentrop))

## EV 1
m1_beta <- betareg::betareg(spec_fentrop_fix ~ 
                              milex_allies +
                              democracy +
                              interstatewar_5yrlag_binary +
                              lngdp_WDI_full +
                              cinc_MC +
                              year_base +
                              year_sq +
                              year_cube, 
                            data = df_full, 
                            link = "logit")

## EV 2
m2_beta <- betareg::betareg(spec_fentrop_fix ~ 
                              cinc_allies_ratio +
                              democracy +
                              interstatewar_5yrlag_binary +
                              lngdp_WDI_full +
                              cinc_MC +
                              year_base +
                              year_sq +
                              year_cube,
                   data = df_full, 
                   link = "logit")

# Table of results
models <- list(m1_flogit,
               m1_flogit_cse,
               m1_beta,
               m2_flogit,
               m2_flogit_cse,
               m2_beta)

coefs <- c("milex_allies" = "Allies' Mil Spend. (log)",
           "cinc_allies_ratio" = "Allies' CINC Ratio",
           "democracy1" = "Democracy",
           "interstatewar_5yrlag_binary1" = "Interstate War (5yr lag)",
           "lngdp_WDI_full" = "GDP (log)",
           "cinc_MC" = "CINC",
           "year_base" = "Year",
           "year_sq" = "Year$^2$",
           "year_cube" = "Year$^3$")

rows <- tibble::tribble(~term, ~'Model 1', ~'Model 2', ~'Model 3', ~'Model 4', ~'Model 5', ~'Model 6',
                  'Robust SE', 'No', 'Yes', 'No', 'No', 'Yes', 'No')
attr(rows, 'position') <- c(20)

modelsummary::modelsummary(models,
                           statistic = 'p.value',
                           stars = c('*' = 0.1, '**' = 0.05, '***' = 0.01),
                           coef_map = coefs,
                           add_rows = rows,
                           escape = FALSE,
                           output = "markdown") %>%
  kableExtra::add_header_above(c(" ",
                                 "Fractional Logit" = 2,
                                 "Beta" = 1,
                                 "Fractional Logit" = 2,
                                 "Beta" = 1)) %>%
  kableExtra::kable_styling(latex_options = "scale_down")
```

\newpage

## Fixed effects

The following models serve as robustness checks for temporal and unit-specific trends. While the original models use scaled cubic polynomials to account for temporal trends, the models in @tbl-results-fe use year-fixed effects [@carter_backfuturemodeling_2010]. Furthermore, rather than cluster standard errors at the country-level, models 2 and 4 add robust standard errors. The results are similar to those provided in the main text and consistent with the original hypothesis. I avoid modeling with two-way fixed effects given recent research identifying the shortfalls and biases of such modeling [@callaway_differenceindifferencesmultipletime_2021; @goodman-bacon_differenceindifferencesvariationtreatment_2021; @sun_estimatingdynamictreatment_2021; @borusyak_revisitingeventstudy_2022]. The new estimators that resolve these problems cannot be easily applied here because the treatment variable is continuous and there are more than two time periods [@callaway_differenceindifferencescontinuoustreatment_2021].

```{r tbl-results-fe}
#| label: tbl-results-fe
#| tbl-cap: "Year-fixed effect regression results"
#| fig.position: 'H!'

# Year FE
## EV 1
m1_yfe <- plm::plm(spec_fentrop ~
                     milex_allies +
                     democracy +
                     interstatewar_5yrlag_binary +
                     lngdp_WDI_full +
                     cinc_MC,
                   data = df_full,
                   index = "year",
                   model = "within")

m1_yfecse <- lmtest::coeftest(m1_yfe, vcov = sandwich::vcovHC, type = "HC1")

## EV 2
m2_yfe <- plm::plm(spec_fentrop ~
                     cinc_allies_ratio +
                     democracy +
                     interstatewar_5yrlag_binary +
                     lngdp_WDI_full +
                     cinc_MC,
                   data = df_full,
                   index = "year",
                   model = "within")

m2_yfecse <- lmtest::coeftest(m2_yfe, vcov = sandwich::vcovHC, type = "HC1")

# All results
models <- list(m1_yfe,
               m1_yfecse,
               m2_yfe,
               m2_yfecse)

coefs <- c("milex_allies" = "Allies' Mil Spend. (log)",
           "cinc_allies_ratio" = "Allies' CINC Ratio",
           "democracy1" = "Democracy",
           "interstatewar_5yrlag_binary1" = "Interstate War (5yr lag)",
           "lngdp_WDI_full" = "GDP (log)",
           "cinc_MC" = "CINC")

rows <- tibble::tribble(~term, ~'Model 1', ~'Model 2', ~'Model 3', ~'Model 4',
                  'Robust SE', 'No', 'Yes', 'No', 'Yes')
attr(rows, 'position') <- c(20)

modelsummary::modelsummary(models,
                           statistic = 'p.value',
                           stars = TRUE,
                           coef_map = coefs,
                           escape = FALSE,
                           output = "markdown")
```

\newpage

## Alternate Controls

```{r tbl-results-gdppc}
#| label: tbl-results-gdppc
#| tbl-cap: "Alternate economic control: GDP per capita"
#| fig-pos: 'B!'

# EV 1
## Select vars
df_m1 <- df_full %>%
  dplyr::select(spec_fentrop,
                milex_allies,
                democracy,
                interstatewar_5yrlag_binary,
                lngdppc_WDI_full,
                cinc_MC,
                year_base,
                year_sq,
                year_cube)

## Bivariate
m1_bi <- lm(spec_fentrop ~ milex_allies,
         data = df_m1)
m1_bicse <- lmtest::coeftest(m1_bi, 
                              vcov = sandwich::vcovCL(m1_bi,
                                                      factor(df_full$country)))

## Multivariate
m1_spline <- lm(spec_fentrop ~ .,
                data = df_m1)
m1_splinecse <- lmtest::coeftest(m1_spline,
                                 vcov = sandwich::vcovCL(m1_spline, factor(df_full$country)))

# EV 2
## Select vars
df_m2 <- df_full %>%
  dplyr::select(spec_fentrop,
                cinc_allies_ratio,
                democracy,
                interstatewar_5yrlag_binary,
                lngdppc_WDI_full,
                cinc_MC,
                year_base,
                year_sq,
                year_cube)

## Bivariate
m2_bi <- lm(spec_fentrop ~ cinc_allies_ratio,
            data = df_m2)
m2_bicse <- lmtest::coeftest(m2_bi, 
                              vcov = sandwich::vcovCL(m2_bi,
                                                      factor(df_full$country)))

## Multivariate
m2_spline <- lm(spec_fentrop ~ .,
                data = df_m2)
m2_splinecse <- lmtest::coeftest(m2_spline,
                                 vcov = sandwich::vcovCL(m2_spline, factor(df_full$country)))

# Table
## https://posit.co/blog/new-features-upgrades-in-gt-0-8-0/
models <- list(m1_bicse, m1_splinecse,
               m2_bicse, m2_splinecse)

coefs <- c("milex_allies" = "Allies' Mil Spend. (log)",
           "cinc_allies_ratio" = "Allies' CINC Ratio",
           "democracy1" = "Democracy",
           "interstatewar_5yrlag_binary1" = "Interstate War (5yr lag)",
           "lngdppc_WDI_full" = "GDP per capita (log)",
           "cinc_MC" = "CINC",
           "coastline" = "Coastline (log)",
           "land_boundary_length_log" = "Land border (log)",
           "year_base" = "Year",
           "year_sq" = "Year$^2$",
           "year_cube" = "Year$^3$")

modelsummary::modelsummary(models,
                           statistic = 'p.value',
                           stars = TRUE,
                           coef_map = coefs,
                           escape = FALSE) %>%
  kableExtra::add_footnote(label = "All models include country-clustered standard errors.") %>%
  kable_styling(latex_options = c("HOLD_position"))
```

\newpage

# Works Cited
